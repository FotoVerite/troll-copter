{
  "name": "node-twitter",
  "version": "0.5.0",
  "description": "A node.js module for interacting with the Twitter API.",
  "keywords": [
    "twitter"
  ],
  "bugs": {
    "url": "https://github.com/istrategylabs/node-twitter/issues"
  },
  "author": {
    "name": "Chris Verwymeren",
    "email": "chris@istrategylabs.com",
    "url": "http://www.istrategylabs.com"
  },
  "contributors": [],
  "main": "./lib/Twitter",
  "directories": {
    "doc": "./doc",
    "example": "./examples",
    "lib": "./lib"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/istrategylabs/node-twitter.git"
  },
  "dependencies": {
    "request": "2.9.x"
  },
  "engines": {
    "node": "0.6.x"
  },
  "licenses": [
    {
      "type": "BSD 3-Clause License",
      "url": "http://www.opensource.org/licenses/BSD-3-Clause"
    }
  ],
  "readme": "# Description\n\nnode-twitter is a node.js module for interacting with the Twitter API.\n\n# Examples\n\n## REST\n\nThe Twitter REST API can be accessed using Twitter.RestClient. The following code example shows how to retrieve tweets from the authenticated user's timeline.\n\n    var Twitter = require('../lib/Twitter');\n\n    var twitterRestClient = new Twitter.RestClient(\n        'CONSUMER_KEY',\n        'CONSUMER_SECRET',\n        'TOKEN',\n        'TOKEN_SECRET'\n    );\n\n    twitterRestClient.statusesHomeTimeline({}, function(error, result) {\n        if (error)\n        {\n            console.log('Error: ' + (error.code ? error.code + ' ' + error.message : error.message));\n        }\n\n        if (result)\n        {\n            console.log(result);\n        }\n    });\n\n## Search\n\nThe Twitter Search API can be accessed using Twitter.SearchClient. The following code example shows how to search for tweets containing the keyword \"node.js\".\n\n    var Twitter = require('../lib/Twitter');\n\n    var twitterSearchClient = new Twitter.SearchClient(\n        'CONSUMER_KEY',\n        'CONSUMER_SECRET',\n        'TOKEN',\n        'TOKEN_SECRET'\n    );\n\n    twitterSearchClient.search({'q': 'node.js'}, function(error, result) {\n        if (error)\n        {\n            console.log('Error: ' + (error.code ? error.code + ' ' + error.message : error.message));\n        }\n\n        if (result)\n        {\n            console.log(result);\n        }\n    });\n\n## Streaming\n\nThe Twitter Streaming API can be accessed using Twitter.StreamClient. The following code example shows how to catch all tweets containing the keywords \"baseball\", \"basketball\", \"football\" or \"hockey\".\n\n    var Twitter = require('../lib/Twitter');\n\n    var twitterStreamClient = new Twitter.StreamClient(\n        'CONSUMER_KEY',\n        'CONSUMER_SECRET',\n        'TOKEN',\n        'TOKEN_SECRET'\n    );\n\n    twitterStreamClient.on('close', function() {\n        console.log('Connection closed.');\n    });\n    twitterStreamClient.on('end', function() {\n        console.log('End of Line.');\n    });\n    twitterStreamClient.on('error', function(error) {\n        console.log('Error: ' + (error.code ? error.code + ' ' + error.message : error.message));\n    });\n    twitterStreamClient.on('tweet', function(tweet) {\n        console.log(tweet);\n    });\n\n    twitterStreamClient.start(['baseball', 'basketball', 'football', 'hockey']);\n\n## Upload\n\nTweets with attached image media (JPG, PNG or GIF) can be posted using the upload API endpoint.\n\n    var Twitter = require('../lib/Twitter');\n\n    var twitterRestClient = new Twitter.RestClient(\n        'CONSUMER_KEY',\n        'CONSUMER_SECRET',\n        'TOKEN',\n        'TOKEN_SECRET'\n    );\n\n    twitterRestClient..statusesUpdateWithMedia(\n        {\n            'status': 'Posting a tweet w/ attached media.',\n            'media[]': '/some/absolute/file/path.jpg'\n        },\n        function(error, result) {}\n            if (error)\n            {\n                console.log('Error: ' + (error.code ? error.code + ' ' + error.message : error.message));\n            }\n\n            if (result)\n            {\n                console.log(result);\n            }\n        );\n    });\n\n# License\n\nnode-twitter is made available under terms of the [BSD 3-Clause License](http://www.opensource.org/licenses/BSD-3-Clause).\n\n# Unit Tests\n\nTo run the unit tests, open tests/UnitTestMain.js in a text editor and replace the OAuth placeholder values with your OAuth credentials. \n\nSave the file then, from the command line, run:\n\n    make test\n",
  "_id": "node-twitter@0.5.0",
  "dist": {
    "shasum": "5f2d4e50c4190ec4c7445b58632d0320bfb9f166"
  },
  "_from": "node-twitter"
}
